package(default_visibility = ["PUBLIC"])

go_get(
    name = "atomic",
    get = "go.uber.org/atomic",
    install = [""],
    sum = "h1:Ezj3JGmsOnG1MoRWQkPBsKLe9DwWD9QeXzTRzzldNVk=",
    version = "v1.6.0",
    deps = [],
)

go_get(
    name = "cadence",
    get = "go.uber.org/cadence",
    install = [
        ".gen/go/shared",
        ".gen/go/cadence",
        ".gen/go/cadence/workflowserviceclient",
        ".gen/go/cadence/workflowservicetest",
        "internal/common",
        "internal/common/backoff",
        "internal/common/cache",
        "internal/common/metrics",
        "internal/common/util",
        "internal",
        "encoded",
        "workflow",
        "client",
        "",
        "activity",
        "worker",
    ],
    sum = "h1:NtAV+JTBFyOrUVTqI+acbfqn68Yrzj4+sX4NPACTt60=",
    version = "v0.9.0",
    deps = [
        ":atomic",
        ":thriftrw",
        ":yarpc",
        ":zap",
        "//third_party/go/github.com/apache:thrift",
        "//third_party/go/github.com/facebookgo:clock",
        "//third_party/go/github.com/golang:mock",
        "//third_party/go/github.com/opentracing:opentracing-go",
        "//third_party/go/github.com/pborman:uuid",
        "//third_party/go/github.com/robfig:cron",
        "//third_party/go/github.com/stretchr:testify",
        "//third_party/go/github.com/uber-go:tally",
        "//third_party/go/golang.org/x:time",
    ],
)

go_get(
    name = "multierr",
    get = "go.uber.org/multierr",
    install = [""],
    sum = "h1:KCa4XfM8CWFCpxXRGok+Q0SS/0XBhMDbHHGABQLvD2A=",
    version = "v1.5.0",
    deps = [":atomic"],
)

go_get(
    name = "thriftrw",
    get = "go.uber.org/thriftrw",
    install = [
        "thriftreflect",
        "wire",
        "version",
        "internal/envelope/exception",
        "protocol/binary",
        "protocol",
        "envelope",
    ],
    sum = "h1:jdVWqCcoT8V9eh4XGaLdGsbFxXtX2huYcBbeXWBjS/w=",
    version = "v1.23.0",
    deps = [
        ":multierr",
        ":zap",
    ],
)

go_get(
    name = "yarpc",
    get = "go.uber.org/yarpc",
    install = [
        "yarpcerrors",
        "api/transport",
        "internal/inboundcall",
        "api/encoding",
        "internal/introspection",
        "api/middleware",
        "internal",
        "internal/errorsync",
        "internal/firstoutboundmiddleware",
        "internal/humanize",
        "internal/inboundmiddleware",
        "internal/digester",
        "internal/observability",
        "internal/outboundmiddleware",
        "internal/request",
        "pkg/lifecycle",
        "",
        "encoding/thrift/internal",
        "internal/bufferpool",
        "pkg/encoding",
        "pkg/errors",
        "pkg/procedure",
        "encoding/thrift",
        "api/backoff",
        "api/peer",
        "internal/backoff",
        "internal/iopool",
        "internal/yarpcerrors",
        "peer",
        "peer/abstractpeer",
        "peer/hostport",
        "transport/tchannel/internal",
        "internal/interpolate",
        "internal/config",
        "yarpcconfig",
        "transport/tchannel",
    ],
    sum = "h1:lyOdulfJ6i9C2jdFd+6Qoj1RiDwv64hCHOZYXD8ofhU=",
    version = "v1.45.0",
    deps = [
        ":atomic",
        ":multierr",
        ":thriftrw",
        ":zap",
        "//third_party/go/github.com/opentracing:opentracing-go",
        "//third_party/go/github.com/uber:tchannel-go",
        "//third_party/go/github.com/uber-go:mapdecode",
        "//third_party/go/github.com/uber-go:tally",
        "//third_party/go/go.uber.org/net:metrics",
        "//third_party/go/golang.org/x:net",
        "//third_party/go/gopkg.in:yaml.v2",
    ],
)

go_get(
    name = "zap",
    get = "go.uber.org/zap",
    install = [
        "buffer",
        "internal/bufferpool",
        "internal/color",
        "internal/exit",
        "zapcore",
        "",
    ],
    sum = "h1:nYDKopTbvAPq/NrUVZwT15y2lpROBiLLyoRTbXOYWOo=",
    version = "v1.14.1",
    deps = [
        ":atomic",
        ":multierr",
    ],
)
