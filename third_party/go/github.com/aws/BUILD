package(default_visibility = ["PUBLIC"])

go_get(
    name = "aws-sdk-go",
    get = "github.com/aws/aws-sdk-go",
    install = [
        "aws/awserr",
        "internal/ini",
        "internal/shareddefaults",
        "aws/credentials",
        "aws/endpoints",
        "internal/sdkio",
        "aws",
        "aws/client/metadata",
        "aws/awsutil",
        "aws/request",
        "internal/sdkrand",
        "aws/client",
        "aws/corehandlers",
        "aws/credentials/processcreds",
        "internal/strings",
        "internal/sdkmath",
        "private/protocol",
        "private/protocol/rest",
        "aws/signer/v4",
        "private/protocol/query/queryutil",
        "private/protocol/xml/xmlutil",
        "private/protocol/query",
        "service/sts",
        "service/sts/stsiface",
        "aws/credentials/stscreds",
        "aws/csm",
        "internal/sdkuri",
        "aws/ec2metadata",
        "aws/credentials/ec2rolecreds",
        "private/protocol/json/jsonutil",
        "aws/credentials/endpointcreds",
        "aws/defaults",
        "aws/session",
        "private/protocol/ec2query",
        "service/ec2",
        "service/iam",
        "service/iam/iamiface",
        "service/cloudformation",
        "aws/arn",
        "internal/s3err",
        "private/protocol/eventstream",
        "private/protocol/eventstream/eventstreamapi",
        "private/protocol/restxml",
        "service/s3/internal/arn",
        "service/s3",
        "service/s3/s3iface",
        "service/s3/s3manager",
        "service/autoscaling",
        "private/protocol/jsonrpc",
        "private/protocol/restjson",
        "service/eks",
        "service/elb",
        "service/ec2/ec2iface",
        "service/route53",
        "service/route53/route53iface",
    ],
    sum = "h1:NkmnHFVEMTRYTleRLm5xUaL1mHKKkYQl4rCd+jzD58c=",
    version = "v1.28.0",
    deps = ["//third_party/go/github.com/jmespath:go-jmespath"],
)
