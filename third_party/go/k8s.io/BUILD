package(default_visibility = ["PUBLIC"])

go_get(
    name = "api",
    get = "k8s.io/api",
    install = [
        "core/v1",
        "admissionregistration/v1",
        "admissionregistration/v1beta1",
        "apps/v1",
        "apps/v1beta1",
        "apps/v1beta2",
        "auditregistration/v1alpha1",
        "authentication/v1",
        "authentication/v1beta1",
        "authorization/v1",
        "authorization/v1beta1",
        "autoscaling/v1",
        "autoscaling/v2beta1",
        "autoscaling/v2beta2",
        "batch/v1",
        "batch/v1beta1",
        "batch/v2alpha1",
        "certificates/v1beta1",
        "coordination/v1",
        "coordination/v1beta1",
        "discovery/v1alpha1",
        "discovery/v1beta1",
        "events/v1beta1",
        "extensions/v1beta1",
        "flowcontrol/v1alpha1",
        "networking/v1",
        "networking/v1beta1",
        "node/v1alpha1",
        "node/v1beta1",
        "policy/v1beta1",
        "rbac/v1",
        "rbac/v1alpha1",
        "rbac/v1beta1",
        "scheduling/v1",
        "scheduling/v1alpha1",
        "scheduling/v1beta1",
        "settings/v1alpha1",
        "storage/v1",
        "storage/v1alpha1",
        "storage/v1beta1",
        "admission/v1",
        "admission/v1beta1",
        "imagepolicy/v1alpha1",
    ],
    replace = "k8s.io/api",
    sum = "h1:EkVieIbn1sC8YCDwckLKLpf+LoVofXYW72+LTZWo4aQ=",
    version = "v0.17.5",
    deps = [
        ":apimachinery",
        "//third_party/go/github.com/gogo:protobuf",
    ],
)

go_get(
    name = "apiextensions-apiserver",
    get = "k8s.io/apiextensions-apiserver",
    install = [
        "pkg/features",
        "pkg/apis/apiextensions",
        "pkg/apis/apiextensions/v1beta1",
        "pkg/apis/apiextensions/v1",
        "pkg/client/clientset/clientset/scheme",
        "pkg/client/clientset/clientset/typed/apiextensions/v1beta1",
    ],
    replace = "k8s.io/apiextensions-apiserver",
    sum = "h1:1MvO6pRopn9ZHweFEVFxnWDRpMd3ZE7SPY156qDnOeI=",
    version = "v0.17.5",
    deps = [
        ":apimachinery",
        ":apiserver",
        ":client-go",
        ":component-base",
        ":utils",
        "//third_party/go/github.com/gogo:protobuf",
    ],
)

go_get(
    name = "apimachinery",
    get = "k8s.io/apimachinery",
    install = [
        "pkg/api/resource",
        "third_party/forked/golang/reflect",
        "pkg/conversion",
        "pkg/selection",
        "pkg/fields",
        "pkg/util/sets",
        "pkg/util/errors",
        "pkg/util/validation/field",
        "pkg/util/validation",
        "pkg/labels",
        "pkg/conversion/queryparams",
        "pkg/runtime/schema",
        "pkg/util/json",
        "pkg/util/naming",
        "pkg/util/runtime",
        "pkg/runtime",
        "pkg/types",
        "pkg/util/intstr",
        "pkg/util/net",
        "pkg/watch",
        "pkg/apis/meta/v1",
        "pkg/api/errors",
        "pkg/runtime/serializer/streaming",
        "pkg/version",
        "pkg/runtime/serializer/recognizer",
        "pkg/util/framer",
        "pkg/util/yaml",
        "pkg/runtime/serializer/json",
        "pkg/runtime/serializer/protobuf",
        "pkg/apis/meta/v1/unstructured",
        "pkg/runtime/serializer/versioning",
        "pkg/runtime/serializer",
        "pkg/util/clock",
        "pkg/api/meta",
        "pkg/apis/meta/v1beta1",
        "pkg/apis/meta/internalversion",
        "pkg/util/wait",
        "pkg/api/equality",
        "pkg/util/mergepatch",
        "third_party/forked/golang/json",
        "pkg/util/strategicpatch",
        "pkg/util/duration",
        "pkg/apis/meta/v1/unstructured/unstructuredscheme",
        "pkg/apis/meta/v1/validation",
        "pkg/api/validation",
        "pkg/util/cache",
        "pkg/util/diff",
        "pkg/util/httpstream",
        "third_party/forked/golang/netutil",
        "pkg/util/httpstream/spdy",
        "pkg/util/remotecommand",
        "pkg/util/rand",
        "pkg/apis/meta/internalversion/scheme",
        "pkg/util/proxy",
        "pkg/util/jsonmergepatch",
    ],
    replace = "k8s.io/apimachinery",
    sum = "h1:QAjfgeTtSGksdkgyaPrIb4lhU16FWMIzxKejYD5S0gc=",
    version = "v0.17.5",
    deps = [
        ":klog",
        ":kube-openapi",
        "//third_party/go/github.com/davecgh:go-spew",
        "//third_party/go/github.com/docker:spdystream",
        "//third_party/go/github.com/evanphx:json-patch",
        "//third_party/go/github.com/gogo:protobuf",
        "//third_party/go/github.com/google:go-cmp",
        "//third_party/go/github.com/google:gofuzz",
        "//third_party/go/github.com/hashicorp:golang-lru",
        "//third_party/go/github.com/json-iterator:go",
        "//third_party/go/github.com/modern-go:reflect2",
        "//third_party/go/github.com/mxk:go-flowrate",
        "//third_party/go/golang.org/x:net",
        "//third_party/go/gopkg.in:inf.v0",
        "//third_party/go/sigs.k8s.io:yaml",
    ],
)

go_get(
    name = "apiserver",
    get = "k8s.io/apiserver",
    install = [
        "pkg/util/feature",
        "pkg/features",
        "pkg/authentication/serviceaccount",
        "pkg/authentication/user",
        "pkg/authentication/authenticator",
    ],
    replace = "k8s.io/apiserver",
    sum = "h1:8RJUTT2TzVZnCl3B+6YgYtaMTIcjwo11z40yZbA85ds=",
    version = "v0.17.5",
    deps = [
        ":apimachinery",
        ":component-base",
    ],
)

go_get(
    name = "cli-runtime",
    get = "k8s.io/cli-runtime",
    install = [
        "pkg/printers",
        "pkg/kustomize/k8sdeps/kv",
        "pkg/kustomize/k8sdeps/configmapandsecret",
        "pkg/kustomize/k8sdeps/kunstruct",
        "pkg/kustomize/k8sdeps/transformer/hash",
        "pkg/kustomize/k8sdeps/transformer/patch",
        "pkg/kustomize/k8sdeps/transformer",
        "pkg/kustomize/k8sdeps/validator",
        "pkg/kustomize/k8sdeps",
        "pkg/kustomize",
        "pkg/resource",
        "pkg/genericclioptions",
    ],
    replace = "k8s.io/cli-runtime",
    sum = "h1:WIlIsuLppbKU6Oixlx1LTAz+e62wj1guQWLphhvZWZg=",
    version = "v0.17.5",
    deps = [
        ":api",
        ":apimachinery",
        ":client-go",
        "//third_party/go/github.com/evanphx:json-patch",
        "//third_party/go/github.com/liggitt:tabwriter",
        "//third_party/go/github.com/pkg:errors",
        "//third_party/go/github.com/spf13:cobra",
        "//third_party/go/github.com/spf13:pflag",
        "//third_party/go/golang.org/x:text",
        "//third_party/go/sigs.k8s.io:kustomize",
        "//third_party/go/sigs.k8s.io:yaml",
    ],
)

go_get(
    name = "client-go",
    get = "k8s.io/client-go",
    install = [
        "pkg/version",
        "pkg/apis/clientauthentication",
        "pkg/apis/clientauthentication/v1alpha1",
        "pkg/apis/clientauthentication/v1beta1",
        "tools/clientcmd/api",
        "transport",
        "util/connrotation",
        "plugin/pkg/client/auth/exec",
        "rest/watch",
        "tools/metrics",
        "util/keyutil",
        "util/cert",
        "util/flowcontrol",
        "rest",
        "kubernetes/scheme",
        "discovery",
        "restmapper",
        "tools/auth",
        "tools/clientcmd/api/v1",
        "tools/clientcmd/api/latest",
        "util/homedir",
        "tools/clientcmd",
        "dynamic",
        "kubernetes/typed/admissionregistration/v1",
        "kubernetes/typed/admissionregistration/v1beta1",
        "kubernetes/typed/apps/v1",
        "kubernetes/typed/apps/v1beta1",
        "kubernetes/typed/apps/v1beta2",
        "kubernetes/typed/auditregistration/v1alpha1",
        "kubernetes/typed/authentication/v1",
        "kubernetes/typed/authentication/v1beta1",
        "kubernetes/typed/authorization/v1",
        "kubernetes/typed/authorization/v1beta1",
        "kubernetes/typed/autoscaling/v1",
        "kubernetes/typed/autoscaling/v2beta1",
        "kubernetes/typed/autoscaling/v2beta2",
        "kubernetes/typed/batch/v1",
        "kubernetes/typed/batch/v1beta1",
        "kubernetes/typed/batch/v2alpha1",
        "kubernetes/typed/certificates/v1beta1",
        "kubernetes/typed/coordination/v1",
        "kubernetes/typed/coordination/v1beta1",
        "tools/reference",
        "kubernetes/typed/core/v1",
        "kubernetes/typed/discovery/v1alpha1",
        "kubernetes/typed/discovery/v1beta1",
        "kubernetes/typed/events/v1beta1",
        "kubernetes/typed/extensions/v1beta1",
        "kubernetes/typed/flowcontrol/v1alpha1",
        "kubernetes/typed/networking/v1",
        "kubernetes/typed/networking/v1beta1",
        "kubernetes/typed/node/v1alpha1",
        "kubernetes/typed/node/v1beta1",
        "kubernetes/typed/policy/v1beta1",
        "kubernetes/typed/rbac/v1",
        "kubernetes/typed/rbac/v1alpha1",
        "kubernetes/typed/rbac/v1beta1",
        "kubernetes/typed/scheduling/v1",
        "kubernetes/typed/scheduling/v1alpha1",
        "kubernetes/typed/scheduling/v1beta1",
        "kubernetes/typed/settings/v1alpha1",
        "kubernetes/typed/storage/v1",
        "kubernetes/typed/storage/v1alpha1",
        "kubernetes/typed/storage/v1beta1",
        "kubernetes",
        "third_party/forked/golang/template",
        "util/jsonpath",
        "discovery/cached/disk",
        "tools/pager",
        "util/retry",
        "tools/cache",
        "tools/portforward",
        "tools/watch",
        "transport/spdy",
        "scale/scheme",
        "scale/scheme/appsint",
        "scale/scheme/appsv1beta1",
        "scale/scheme/appsv1beta2",
        "scale/scheme/autoscalingv1",
        "scale/scheme/extensionsint",
        "scale/scheme/extensionsv1beta1",
        "scale",
        "util/exec",
        "tools/remotecommand",
        "informers/internalinterfaces",
        "listers/admissionregistration/v1",
        "informers/admissionregistration/v1",
        "listers/admissionregistration/v1beta1",
        "informers/admissionregistration/v1beta1",
        "informers/admissionregistration",
        "listers/apps/v1",
        "informers/apps/v1",
        "listers/apps/v1beta1",
        "informers/apps/v1beta1",
        "listers/apps/v1beta2",
        "informers/apps/v1beta2",
        "informers/apps",
        "listers/auditregistration/v1alpha1",
        "informers/auditregistration/v1alpha1",
        "informers/auditregistration",
        "listers/autoscaling/v1",
        "informers/autoscaling/v1",
        "listers/autoscaling/v2beta1",
        "informers/autoscaling/v2beta1",
        "listers/autoscaling/v2beta2",
        "informers/autoscaling/v2beta2",
        "informers/autoscaling",
        "listers/batch/v1",
        "informers/batch/v1",
        "listers/batch/v1beta1",
        "informers/batch/v1beta1",
        "listers/batch/v2alpha1",
        "informers/batch/v2alpha1",
        "informers/batch",
        "listers/certificates/v1beta1",
        "informers/certificates/v1beta1",
        "informers/certificates",
        "listers/coordination/v1",
        "informers/coordination/v1",
        "listers/coordination/v1beta1",
        "informers/coordination/v1beta1",
        "informers/coordination",
        "listers/core/v1",
        "informers/core/v1",
        "informers/core",
        "listers/discovery/v1alpha1",
        "informers/discovery/v1alpha1",
        "listers/discovery/v1beta1",
        "informers/discovery/v1beta1",
        "informers/discovery",
        "listers/events/v1beta1",
        "informers/events/v1beta1",
        "informers/events",
        "listers/extensions/v1beta1",
        "informers/extensions/v1beta1",
        "informers/extensions",
        "listers/flowcontrol/v1alpha1",
        "informers/flowcontrol/v1alpha1",
        "informers/flowcontrol",
        "listers/networking/v1",
        "informers/networking/v1",
        "listers/networking/v1beta1",
        "informers/networking/v1beta1",
        "informers/networking",
        "listers/node/v1alpha1",
        "informers/node/v1alpha1",
        "listers/node/v1beta1",
        "informers/node/v1beta1",
        "informers/node",
        "listers/policy/v1beta1",
        "informers/policy/v1beta1",
        "informers/policy",
        "listers/rbac/v1",
        "informers/rbac/v1",
        "listers/rbac/v1alpha1",
        "informers/rbac/v1alpha1",
        "listers/rbac/v1beta1",
        "informers/rbac/v1beta1",
        "informers/rbac",
        "listers/scheduling/v1",
        "informers/scheduling/v1",
        "listers/scheduling/v1alpha1",
        "informers/scheduling/v1alpha1",
        "listers/scheduling/v1beta1",
        "informers/scheduling/v1beta1",
        "informers/scheduling",
        "listers/settings/v1alpha1",
        "informers/settings/v1alpha1",
        "informers/settings",
        "listers/storage/v1",
        "informers/storage/v1",
        "listers/storage/v1alpha1",
        "informers/storage/v1alpha1",
        "listers/storage/v1beta1",
        "informers/storage/v1beta1",
        "informers/storage",
        "informers",
        "metadata",
        "metadata/metadatalister",
        "metadata/metadatainformer",
        "tools/record/util",
        "tools/record",
        "plugin/pkg/client/auth/gcp",
        "util/workqueue",
    ],
    replace = "k8s.io/client-go",
    sum = "h1:Sm/9AQ415xPAX42JLKbJZnreXFgD2rVfDUDwOTm0gzA=",
    version = "v0.17.5",
    deps = [
        ":api",
        ":apimachinery",
        ":klog",
        ":utils",
        "//third_party/go/github.com/davecgh:go-spew",
        "//third_party/go/github.com/golang:groupcache",
        "//third_party/go/github.com/golang:protobuf",
        "//third_party/go/github.com/googleapis:gnostic",
        "//third_party/go/github.com/gregjones:httpcache",
        "//third_party/go/github.com/imdario:mergo",
        "//third_party/go/github.com/peterbourgon:diskv",
        "//third_party/go/github.com/spf13:pflag",
        "//third_party/go/golang.org/x:crypto",
        "//third_party/go/golang.org/x:net",
        "//third_party/go/golang.org/x:oauth2",
        "//third_party/go/golang.org/x:time",
    ],
)

go_get(
    name = "cluster-bootstrap",
    get = "k8s.io/cluster-bootstrap",
    install = [
        "token/api",
        "token/util",
        "util/secrets",
    ],
    replace = "k8s.io/cluster-bootstrap",
    sum = "h1:LjdKuGxrDCdCRZBXp94R5WQC3XD+3TQRv0AY3yMTDBU=",
    version = "v0.17.5",
    deps = [
        ":api",
        ":apimachinery",
        ":klog",
    ],
)

go_get(
    name = "component-base",
    get = "k8s.io/component-base",
    install = [
        "featuregate",
        "version",
        "config",
        "config/v1alpha1",
        "cli/flag",
    ],
    replace = "k8s.io/component-base",
    sum = "h1:f4QKFRH1OIuWbpWwDm+vGvFQmrXmAbtPF8PREdtkIGE=",
    version = "v0.17.5",
    deps = [
        ":apimachinery",
        ":klog",
        ":utils",
        "//third_party/go/github.com/spf13:pflag",
    ],
)

go_get(
    name = "helm",
    get = "k8s.io/helm",
    install = [
        "pkg/ignore",
        "pkg/proto/hapi/chart",
        "pkg/proto/hapi/version",
        "pkg/sympath",
        "pkg/version",
        "pkg/chartutil",
        "pkg/proto/hapi/release",
        "pkg/releaseutil",
        "pkg/manifest",
        "pkg/proto/hapi/services",
        "pkg/engine",
        "pkg/renderutil",
        "pkg/storage/errors",
        "pkg/helm",
        "pkg/kube",
        "pkg/storage/driver",
        "pkg/storage",
        "pkg/tiller/environment",
        "pkg/helm/portforwarder",
        "pkg/helm/helmpath",
        "pkg/helm/environment",
        "pkg/plugin",
        "pkg/urlutil",
        "pkg/tlsutil",
        "pkg/getter",
        "pkg/provenance",
        "pkg/repo",
        "pkg/strvals",
        "cmd/helm/installer",
        "internal/third_party/dep/fs",
        "pkg/resolver",
        "pkg/downloader",
    ],
    replace = "github.com/banzaicloud/helm",
    sum = "h1:JOyw3e97+ArUdmzLNMuu7RukJuGNs9FLyWtiMAyztiI=",
    version = "v2.7.1-0.20200228123321-c4355aab74fc+incompatible",
    deps = [
        ":api",
        ":apiextensions-apiserver",
        ":apimachinery",
        ":cli-runtime",
        ":client-go",
        ":kubectl",
        ":kubernetes",
        "//third_party/go/github.com/BurntSushi:toml",
        "//third_party/go/github.com/Masterminds:semver",
        "//third_party/go/github.com/Masterminds:sprig",
        "//third_party/go/github.com/cyphar:filepath-securejoin",
        "//third_party/go/github.com/evanphx:json-patch",
        "//third_party/go/github.com/ghodss:yaml",
        "//third_party/go/github.com/gobwas:glob",
        "//third_party/go/github.com/golang:protobuf",
        "//third_party/go/github.com/jmoiron:sqlx",
        "//third_party/go/github.com/lib:pq",
        "//third_party/go/github.com/pkg:errors",
        "//third_party/go/github.com/rubenv:sql-migrate",
        "//third_party/go/github.com/spf13:pflag",
        "//third_party/go/golang.org/x:crypto",
        "//third_party/go/golang.org/x:net",
        "//third_party/go/google.golang.org:grpc",
    ],
)

go_get(
    name = "klog",
    get = "k8s.io/klog",
    install = [""],
    sum = "h1:Pt+yjF5aB1xDSVbau4VsWe+dQNzA0qv1LlXdC2dF6Q8=",
    version = "v1.0.0",
    deps = [],
)

go_get(
    name = "kube-openapi",
    get = "k8s.io/kube-openapi",
    install = [
        "pkg/util/proto",
        "pkg/common",
        "pkg/util/proto/validation",
    ],
    sum = "h1:jocF7XFucw2pEiv2wS7wk2FRFCjDFGV1oa4TMs0SAT0=",
    version = "v0.0.0-20200316234421-82d701f24f9d",
    deps = [
        "//third_party/go/github.com/emicklei:go-restful",
        "//third_party/go/github.com/go-openapi:spec",
        "//third_party/go/github.com/googleapis:gnostic",
        "//third_party/go/gopkg.in:yaml.v2",
    ],
)

go_get(
    name = "kube-proxy",
    get = "k8s.io/kube-proxy",
    install = ["config/v1alpha1"],
    replace = "k8s.io/kube-proxy",
    sum = "h1:K+1Hi1BgeELDPvmBihOdYAuDUwqnQd68pKstcDqW2kY=",
    version = "v0.17.5",
    deps = [
        ":apimachinery",
        ":component-base",
    ],
)

go_get(
    name = "kubectl",
    get = "k8s.io/kubectl",
    install = [
        "pkg/scheme",
        "pkg/util/openapi",
        "pkg/util/openapi/validation",
        "pkg/util/interrupt",
        "pkg/util/term",
        "pkg/util/templates",
        "pkg/validation",
        "pkg/cmd/util",
        "pkg/rawhttp",
        "pkg/generated",
        "pkg/util/i18n",
        "pkg/cmd/get",
    ],
    replace = "k8s.io/kubectl",
    sum = "h1:ZPHJzD5Vvs0jk1Rdx23npBm3z5PgVEER+b/VE8fxbKU=",
    version = "v0.17.5",
    deps = [
        ":api",
        ":apimachinery",
        ":cli-runtime",
        ":client-go",
        ":component-base",
        ":klog",
        ":kube-openapi",
        ":utils",
        "//third_party/go/github.com/MakeNowJust:heredoc",
        "//third_party/go/github.com/chai2010:gettext-go",
        "//third_party/go/github.com/docker",
        "//third_party/go/github.com/evanphx:json-patch",
        "//third_party/go/github.com/exponent-io:jsonpath",
        "//third_party/go/github.com/go-openapi:spec",
        "//third_party/go/github.com/googleapis:gnostic",
        "//third_party/go/github.com/liggitt:tabwriter",
        "//third_party/go/github.com/mitchellh:go-wordwrap",
        "//third_party/go/github.com/russross:blackfriday",
        "//third_party/go/github.com/spf13:cobra",
        "//third_party/go/github.com/spf13:pflag",
        "//third_party/go/golang.org/x:sys",
        "//third_party/go/gopkg.in:yaml.v2",
        "//third_party/go/vbom.ml:util",
    ],
)

go_get(
    name = "kubelet",
    get = "k8s.io/kubelet",
    install = ["config/v1beta1"],
    replace = "k8s.io/kubelet",
    sum = "h1:2P+HWjbe3fjB0f5JUhbYrqRYp3CjhmfgxBF9NSV+i8k=",
    version = "v0.17.5",
    deps = [
        ":api",
        ":apimachinery",
    ],
)

go_get(
    name = "kubernetes",
    get = "k8s.io/kubernetes",
    install = [
        "pkg/apis/core",
        "pkg/apis/storage",
        "pkg/features",
        "pkg/apis/storage/util",
        "pkg/api/legacyscheme",
        "pkg/api/v1/pod",
        "pkg/apis/autoscaling",
        "pkg/apis/apps",
        "pkg/util/parsers",
        "pkg/apis/core/v1",
        "pkg/apis/core/install",
        "pkg/api/service",
        "pkg/apis/core/helper",
        "pkg/fieldpath",
        "pkg/apis/core/pods",
        "pkg/apis/core/v1/helper",
        "pkg/capabilities",
        "pkg/master/ports",
        "pkg/apis/scheduling",
        "pkg/kubelet/types",
        "pkg/security/apparmor",
        "pkg/apis/core/validation",
        "pkg/serviceaccount",
        "pkg/util/hash",
        "pkg/util/taints",
        "pkg/controller",
        "pkg/util/labels",
        "pkg/controller/deployment/util",
        "cmd/kubeadm/app/apis/kubeadm",
        "pkg/api/v1/resource",
        "pkg/scheduler/algorithm/priorities/util",
        "pkg/scheduler/nodeinfo",
    ],
    sum = "h1:ZPZDhS4wRIPSKahglFHK5Q8wcUH/Q2QE5AbopkuLYyU=",
    version = "v1.17.5",
    deps = [
        ":api",
        ":apiextensions-apiserver",
        ":apimachinery",
        ":apiserver",
        ":client-go",
        ":cluster-bootstrap",
        ":component-base",
        ":klog",
        ":kube-proxy",
        ":kubelet",
        ":utils",
        "//third_party/go/github.com/davecgh:go-spew",
        "//third_party/go/github.com/docker:distribution",
        "//third_party/go/github.com/golang:groupcache",
        "//third_party/go/github.com/pkg:errors",
        "//third_party/go/golang.org/x:oauth2",
        "//third_party/go/gopkg.in/square:go-jose.v2",
    ],
)

go_get(
    name = "utils",
    get = "k8s.io/utils",
    install = [
        "integer",
        "pointer",
        "buffer",
        "trace",
        "exec",
        "net",
        "path",
    ],
    sum = "h1:GiPwtSzdP43eI1hpPCbROQCCIgCuiMMNF8YUVLF3vJo=",
    version = "v0.0.0-20191114184206-e782cd3c129f",
    deps = [":klog"],
)
